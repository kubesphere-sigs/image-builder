apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tekton-pipelines.fullname" . }}-controller
  labels:
    app.kubernetes.io/component: controller
    pipeline.tekton.dev/release: v0.37.2
    version: v0.37.2
  {{- include "tekton-pipelines.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controller.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
    {{- include "tekton-pipelines.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: tekton-pipelines-controller
        app.kubernetes.io/component: controller
        pipeline.tekton.dev/release: v0.37.2
        version: v0.37.2
      {{- include "tekton-pipelines.selectorLabels" . | nindent 8 }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: NotIn
                values:
                - windows
      containers:
        - args:
          {{- with .Values.controller.tektonPipelinesController}}
          - -kubeconfig-writer-image
          - {{ .kubeconfigWriterImage.repository }}:{{ .kubeconfigWriterImage.tag }}
          - -git-image
          - {{ .gitImage.repository }}:{{ .gitImage.tag }}
          - -entrypoint-image
          - {{ .entrypointImage.repository }}:{{ .entrypointImage.tag }}
          - -nop-image
          - {{ .nopImage.repository }}:{{ .nopImage.tag }}
          - -imagedigest-exporter-image
          - {{ .imagedigestExporterImage.repository }}:{{ .imagedigestExporterImage.tag }}
          - -pr-image
          - {{ .prImage.repository }}:{{ .prImage.tag }}
          - -workingdirinit-image
          - {{ .workingdirinitImage.repository }}:{{ .workingdirinitImage.tag }}
          - -gsutil-image
          - {{ .gsutilImage.repository }}@{{.gsutilImage.digest}}
          - -shell-image
          - {{ .shellImage.repository }}@{{.shellImage.digest}}
          - -shell-image-win
          - {{ .shellImageWin.repository }}@{{.shellImageWin.digest}}
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_DEFAULTS_NAME
              value: config-defaults
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: CONFIG_ARTIFACT_BUCKET_NAME
              value: config-artifact-bucket
            - name: CONFIG_ARTIFACT_PVC_NAME
              value: config-artifact-pvc
            - name: CONFIG_FEATURE_FLAGS_NAME
              value: feature-flags
            - name: CONFIG_LEADERELECTION_NAME
              value: config-leader-election
            - name: SSL_CERT_FILE
              value: /etc/config-registry-cert/cert
            - name: SSL_CERT_DIR
              value: /etc/ssl/certs
            - name: METRICS_DOMAIN
              value: tekton.dev/pipeline
            - name: KUBERNETES_CLUSTER_DOMAIN
              value: {{ $.Values.kubernetesClusterDomain }}
            {{- if semverCompare "<1.21-0" $.Capabilities.KubeVersion.Version }}
            - name: KUBERNETES_MIN_VERSION
              value: {{ $.Capabilities.KubeVersion }}
            {{- end }}
          image: {{ .image.repository }}:{{ .image.tag }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /health
              port: probes
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          name: tekton-pipelines-controller
          ports:
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
            - containerPort: 8080
              name: probes
          readinessProbe:
            httpGet:
              path: /readiness
              port: probes
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
            runAsGroup: 65532
            runAsUser: 65532
          volumeMounts:
            - mountPath: /etc/config-logging
              name: config-logging
            - mountPath: /etc/config-registry-cert
              name: config-registry-cert
      serviceAccountName: {{ include "tekton-pipelines.fullname" . }}-controller
      volumes:
        - configMap:
            name: config-logging
          name: config-logging
        - configMap:
            name: config-registry-cert
          name: config-registry-cert